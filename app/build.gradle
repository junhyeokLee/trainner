/*
* Copyright 2023 The TensorFlow Authors. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
        * limitations under the License.
*/
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'de.undercouch.download'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.sports2i.trainer'
    compileSdk 34

    defaultConfig {
        applicationId "com.sports2i.trainer"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true
        vectorDrawables {
            useSupportLibrary true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
    }
    buildFeatures{
        viewBinding true
        compose true
        buildConfig true
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['**/attach_hotspot_windows.dll', 'META-INF/DEPENDENCIES', 'META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/gradle/incremental.annotation.processors']
        }
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.material3:material3:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
//    implementation 'androidx.core:core-ktx:+'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // 프로그레스바 라이브러리 추가
    implementation 'com.pnikosis:materialish-progress:1.7'
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'

    //Retrofit 라이브러리 추가
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // 코루틴 라이브러리 추가
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    // 코루틴 Lifecycle 라이브러리 추가
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    // Dagger Hilt 라이브러리 추가
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'
    kapt 'com.google.dagger:dagger-android-processor:2.44'
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // room 라이브러리 추가
    implementation "androidx.room:room-runtime:2.4.0"
    kapt "androidx.room:room-compiler:2.4.0"
    implementation "androidx.room:room-ktx:2.4.0"

    // MPAndroidChart 라이브러리 추가
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'com.tbuonomo:dotsindicator:5.0'

    //json 라이브러리 추가
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0")
    implementation 'com.google.code.gson:gson:2.8.9'

    // 생체인식 라이브러리 추가
    implementation("androidx.biometric:biometric:1.2.0-alpha05")

    // 카메라 라이브러리 추가
    def camerax_version = '1.3.0-alpha04'
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
    implementation("androidx.camera:camera-mlkit-vision:${camerax_version}")

    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"
    // MediaPipe Library
    implementation 'com.google.mediapipe:tasks-vision:0.10.0'

    // 새로고침 라이브러리 추가
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")

    // FlexboxLayoutManager 라이브러리 추가
    implementation 'com.google.android.flexbox:flexbox:3.0.0'


    // viewpager2 라이브러리 추가
    implementation 'androidx.viewpager2:viewpager2:1.0.0-alpha01'

    // googleMap
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    // Ncp
    implementation 'com.amazonaws:aws-android-sdk-s3:2.22.0'

    // blur 라이브러리 추가
    implementation 'com.github.Dimezis:BlurView:version-2.0.3'

    implementation 'com.jakewharton.timber:timber:4.7.1'
    // Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'


// compose
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation(composeBom)

    implementation "androidx.compose.material:material:1.5.4"
    implementation "androidx.compose.ui:ui-tooling-preview:1.5.4"
    implementation 'androidx.compose.ui:ui-android:1.5.4'
    implementation "androidx.activity:activity-compose:1.5.1"

    // For Health Connect
//    implementation "androidx.health.connect:connect-client:1.0.0-alpha10"
//    implementation("androidx.health.connect:connect-client:1.0.0-alpha07")
//    implementation("androidx.health.connect:connect-client:1.0.0-alpha11")
    implementation("androidx.health.connect:connect-client:1.1.0-alpha07")
//    implementation "androidx.health.connect:connect-client:1.1.0-alpha01"

    // For viewmodel support
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    // Navigation
//    implementation "androidx.navigation:navigation-compose:2.5.1"
    implementation "androidx.navigation:navigation-compose:2.7.7"

    // Icons
    implementation "androidx.compose.material:material-icons-extended"
    implementation "com.google.accompanist:accompanist-drawablepainter:0.23.1"
    implementation 'com.google.android.material:material:1.4.0'

    // lottie 애니메이션
    implementation 'com.airbnb.android:lottie:5.0.2'

    // Full exoplayer library
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'
    implementation 'androidx.media3:media3-exoplayer:1.2.1'

    // 비디오 압축
//    implementation 'com.arthenica:mobile-ffmpeg-full:4.4.LTS'
    implementation 'com.arthenica:mobile-ffmpeg-min-gpl:4.4'


    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //jwt 토큰 만료시간 체크 하기위한 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    debugImplementation "androidx.compose.ui:ui-tooling"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.2.2"
}

kapt {
    correctErrorTypes true
}